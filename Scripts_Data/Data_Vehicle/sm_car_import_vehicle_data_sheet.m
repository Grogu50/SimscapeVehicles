function [Vehicle, VehicleData] = sm_car_import_vehicle_data_sheet(workbookFile, sheetName, startRow, endRow)
%IMPORTFILE Import data from a spreadsheet
%  VEHICLEDATA = SM_CAR_IMPORT_VEHICLE_DATA(FILE) reads data from the first worksheet in
%  the Microsoft Excel spreadsheet file named FILE.  Returns the data as
%  a cell array.
%
%  VEHICLEDATA = SM_CAR_IMPORT_VEHICLE_DATA(FILE, SHEET) reads from the specified
%  worksheet.
%
%  VEHICLEDATA = SM_CAR_IMPORT_VEHICLE_DATA(FILE, SHEET, STARTROW, ENDROW) reads from
%  the specified worksheet for the specified row interval(s). Specify
%  STARTROW and ENDROW as a pair of scalars or vectors of matching size
%  for dis-contiguous row intervals.
%
%  Example:
%  VehicleData = sm_car_import_vehicle_data("Vehicle_Data.xlsx", "Sheet1", 2, 62);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 04-Nov-2018 11:57:26

%% Input handling

% If no sheet is specified, read first sheet
if nargin == 1 || isempty(sheetName)
    sheetName = 1;
end

% If row start and end points are not specified, define defaults
if nargin <= 3
    startRow = 2;
    endRow = 250;  % Ensure longer than entire table
end

%% Setup the Import Options
max_width = 30;
opts = spreadsheetImportOptions("NumVariables", max_width);

% Specify sheet and range
opts.Sheet = sheetName;
opts.DataRange = "A" + startRow(1) + ":" + string(xlscol(max_width)) + endRow(1);

% Specify column names and types
%opts.VariableNames = ["Subsystem", "Part", "Quantity", "Units", "Comments", "x", "y", "z", "VarName9", "VarName10", "VarName11", "VarName12", "VarName13", "VarName14", "VarName15", "VarName16", "VarName17", "VarName18", "VarName19", "VarName20", "VarName21", "VarName22", "VarName23", "VarName24", "VarName25", "VarName26", "VarName27", "VarName28"];
opts.VariableNames = "VarName"+string(1:max_width);
%opts.VariableTypes = ["string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string"];
opts.VariableTypes = repmat("string",1,max_width);
%opts = setvaropts(opts, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "WhitespaceRule", "preserve");
%opts = setvaropts(opts, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "EmptyFieldRule", "auto");
opts = setvaropts(opts, 1:max_width, "WhitespaceRule", "preserve");
opts = setvaropts(opts, 1:max_width, "EmptyFieldRule", "auto");

% Import the data
VehicleData = readtable(workbookFile, opts, "UseExcel", false);

for idx = 1:length(startRow)
    opts.DataRange = "A" + startRow(idx) + ":" + string(xlscol(max_width)) + endRow(idx);
    tb = readtable(workbookFile, opts, "UseExcel", false);
    VehicleData = [VehicleData; tb]; %#ok<AGROW>
end

%% Convert to output type
VehicleData = table2cell(VehicleData);
numIdx = cellfun(@(x) ~isnan(str2double(x)), VehicleData);
VehicleData(numIdx) = cellfun(@(x) {str2double(x)}, VehicleData(numIdx));


veh_dat_i = 1;
Vehicle = [];

% Loop through table
table_end = find(strcmp([VehicleData{:,8}]',""),1);
while (veh_dat_i<=table_end-1)
    
    % If content in third cell in row, update level 3 field name
    if((VehicleData{veh_dat_i,3}=="") && (VehicleData{veh_dat_i,2}=="") && ...
            (VehicleData{veh_dat_i,1}==""))
        % Retain fieldnames - 2D lookup table
        LUT2D = 1;
    else
        LUT2D = 0;
        % If content in third cell in row, update level 3 field name
        if(~(VehicleData{veh_dat_i,3}==""))
            fieldname3 = strrep(char(VehicleData{veh_dat_i,1+2}),' ','_');
        else
            fieldname3 = [];
            fieldname2 = [];
        end
        
        % If content in second cell in row, update level 2 field name
        if(~(VehicleData{veh_dat_i,2}==""))
            fieldname2 = strrep(char(VehicleData{veh_dat_i,1+1}),' ','_');
        end
        
        % If content in first cell in row, update level 1 field name
        if(~(VehicleData{veh_dat_i,1}==""))
            fieldname1 = strrep(char(VehicleData{veh_dat_i,1}),' ','_');
        end
    end
    
    UnitsString = char(VehicleData{veh_dat_i,1+3});    % Units in column 4
    CommentsString = char(VehicleData{veh_dat_i,1+4}); % Comments in column 5
    xValue = VehicleData{veh_dat_i,1+5};               % x value in column 6
    yValue = VehicleData{veh_dat_i,1+6};               % y value in column 7
    % z value, scalar, or start of vector in column 8
    zValue = VehicleData{veh_dat_i,1+7};
    vectorValue = [VehicleData{veh_dat_i,(1+7):size(VehicleData,2)}];
    
    % Assign units and comments
    %disp(['READ:   ' char(VehicleData{veh_dat_i,1}) ', ' char(VehicleData{veh_dat_i,2}) ', ' char(VehicleData{veh_dat_i,3})]);
    %disp(['DEFINE: ' fieldname1 ', ' fieldname2 ', ' fieldname3]);
    %disp(['VALUE:  ' zValue]);
    %disp(' ');
    
    if~isempty(fieldname3)
        if(~strcmp(fieldname3,'class'))
            Vehicle = setfield(Vehicle,fieldname1,fieldname2,fieldname3,'Units',UnitsString);
            Vehicle = setfield(Vehicle,fieldname1,fieldname2,fieldname3,'Comments',CommentsString);
        end
    elseif~isempty(fieldname2)
        if(~strcmp(fieldname2,'class'))
            Vehicle = setfield(Vehicle,fieldname1,fieldname2,'Units',UnitsString);
            Vehicle = setfield(Vehicle,fieldname1,fieldname2,'Comments',CommentsString);
        end
        % New branch June 3, 2019, for when only first field has text
    elseif~isempty(fieldname1)
        if(~strcmp(fieldname1,'class'))
            Vehicle = setfield(Vehicle,fieldname1,'Units',UnitsString);
            Vehicle = setfield(Vehicle,fieldname1,'Comments',CommentsString);
        end
    end
    
    % If data in xValue column, must be a 3-element vector
    if(~(string(xValue)==""))
        %disp('VALUE is 3-ELEMENT VECTOR');
        if~isempty(fieldname3)
            Vehicle = setfield(Vehicle,fieldname1,fieldname2,fieldname3,'Value',[xValue yValue zValue]);
        elseif~isempty(fieldname2)
            Vehicle = setfield(Vehicle,fieldname1,fieldname2,'Value',[xValue yValue zValue]);
        else
            Vehicle = setfield(Vehicle,fieldname1,'Value',[xValue yValue zValue]);
        end
        % Else data in second element of vector, must be a vector of values
    elseif (~(string(vectorValue(2))==""))
        %disp('VALUE is VECTOR');
        vectorValue = double(vectorValue);
        vectorValue = vectorValue(~isnan(vectorValue));
        if~isempty(fieldname3)
            if(LUT2D)
                % Note: This builds table row-by-row from row 1 to end
                %       even though it appears to prepend new data
                vectorValue = [getfield(Vehicle,fieldname1,fieldname2,fieldname3,'Value');vectorValue];
            end     
            Vehicle = setfield(Vehicle,fieldname1,fieldname2,fieldname3,'Value',vectorValue);
        elseif~isempty(fieldname2)
            if(LUT2D)
                % Note: This builds table row-by-row from row 1 to end
                %       even though it appears to prepend new data
                vectorValue = [getfield(Vehicle,fieldname1,fieldname2,'Value');vectorValue];
            end     
            Vehicle = setfield(Vehicle,fieldname1,fieldname2,'Value',vectorValue);
        else
            Vehicle = setfield(Vehicle,fieldname1,'Value',vectorValue);
        end
        % Else data must be a scalar
    else
        %disp('VALUE is SCALAR');
        if(isstring(zValue))  % Convert class to char
            zValue = char(zValue);
            %disp(['STRING in zValue: ' zValue]);
        end
        if~isempty(fieldname3)
            Vehicle = setfield(Vehicle,fieldname1,fieldname2,fieldname3,'Value',zValue);
        elseif~isempty(fieldname2)
            Vehicle = setfield(Vehicle,fieldname1,fieldname2,'Value',zValue);
        else
            Vehicle = setfield(Vehicle,fieldname1,'Value',zValue);
        end
    end
    
    % Move to next row of raw imported data
    veh_dat_i=veh_dat_i+1;
end


end
%}