function sm_car_testrig_hps_test(mdl,varargin)
% Function to check hardpoint calculations

steering = 'none';
vehnum = 'none';
dist_offset = 0.1;

if(nargin>=2)
    steering = varargin{1};
end
if(nargin>=3)
    vehnum = varargin{2};
end
if(nargin>=4)
    dist_offset = varargin{3};
end

open_system(mdl)

if(strcmp(mdl,'sm_car_testrig_susp_dwa_hp'))
    set_param([mdl '/Suspension'],'popup_steer',steering);
end

if(~strcmp(vehnum,'none'))
    evalin('base',['Vehicle = Vehicle_' vehnum ';']);
end

hardpoint_list = {...
    'Vehicle.Chassis.SuspF.Linkage.LowerWishbone.sInboardF.Value',...
    'Vehicle.Chassis.SuspF.Linkage.LowerWishbone.sInboardR.Value',...
    'Vehicle.Chassis.SuspF.Linkage.LowerWishbone.sOutboard.Value',...
    'Vehicle.Chassis.SuspF.Linkage.UpperWishbone.sInboardR.Value',...
    'Vehicle.Chassis.SuspF.Linkage.UpperWishbone.sInboardF.Value',...
    'Vehicle.Chassis.SuspF.Linkage.UpperWishbone.sOutboard.Value',...
    'Vehicle.Chassis.SuspF.Linkage.Upright.sCG.Value',...
    'Vehicle.Chassis.SuspF.Linkage.Upright.sWheelCentre.Value',...
    'Vehicle.Chassis.SuspF.Linkage.TrackRod.sInboard.Value',...
    'Vehicle.Chassis.SuspF.Linkage.TrackRod.sOutboard.Value',...
    'Vehicle.Chassis.SuspF.Linkage.Shock.sTop.Value',...
    'Vehicle.Chassis.SuspF.Linkage.Shock.sBottom.Value'};

if (strcmp(mdl,'sm_car_testrig_susp_splitla_shockf_hp'))
    hardpoint_list = {...
        'Vehicle.Chassis.SuspF.Linkage.LowerArmF.sInboard.Value',...
        'Vehicle.Chassis.SuspF.Linkage.LowerArmR.sInboard.Value',...
        'Vehicle.Chassis.SuspF.Linkage.LowerArmF.sOutboard.Value',...
        'Vehicle.Chassis.SuspF.Linkage.LowerArmR.sOutboard.Value',...
        'Vehicle.Chassis.SuspF.Linkage.UpperWishbone.sInboardF.Value',...
        'Vehicle.Chassis.SuspF.Linkage.UpperWishbone.sInboardR.Value',...
        'Vehicle.Chassis.SuspF.Linkage.UpperWishbone.sOutboard.Value',...
        'Vehicle.Chassis.SuspF.Linkage.Upright.sCG.Value',...
        'Vehicle.Chassis.SuspF.Linkage.Upright.sWheelCentre.Value',...
        'Vehicle.Chassis.SuspF.Linkage.TrackRod.sInboard.Value',...
        'Vehicle.Chassis.SuspF.Linkage.TrackRod.sOutboard.Value',...
        'Vehicle.Chassis.SuspF.Linkage.Shock.sTop.Value',...
        'Vehicle.Chassis.SuspF.Linkage.Shock.sBottom.Value'};
elseif (strcmp(mdl,'sm_car_testrig_susp_link5_shockr_hp'))
    hardpoint_list = {...
        'Vehicle.Chassis.SuspF.Linkage.LowerArmF.sInboard.Value',...
        'Vehicle.Chassis.SuspF.Linkage.LowerArmR.sInboard.Value',...
        'Vehicle.Chassis.SuspF.Linkage.LowerArmF.sOutboard.Value',...
        'Vehicle.Chassis.SuspF.Linkage.LowerArmR.sOutboard.Value',...
        'Vehicle.Chassis.SuspF.Linkage.UpperArmF.sInboard.Value',...
        'Vehicle.Chassis.SuspF.Linkage.UpperArmR.sInboard.Value',...
        'Vehicle.Chassis.SuspF.Linkage.UpperArmF.sOutboard.Value',...
        'Vehicle.Chassis.SuspF.Linkage.UpperArmR.sOutboard.Value',...
        'Vehicle.Chassis.SuspF.Linkage.Upright.sCG.Value',...
        'Vehicle.Chassis.SuspF.Linkage.Upright.sWheelCentre.Value',...
        'Vehicle.Chassis.SuspF.Linkage.TrackRod.sInboard.Value',...
        'Vehicle.Chassis.SuspF.Linkage.TrackRod.sOutboard.Value',...
        'Vehicle.Chassis.SuspF.Linkage.Shock.sTop.Value',...
        'Vehicle.Chassis.SuspF.Linkage.Shock.sBottom.Value'};
end

hp_offset = [0 0 0];
hp_axes = {'x' 'y' 'z'};

if(dist_offset>0)
    offset_str = 'offsetPos';
    offset_str_short = 'Pos';
else
    offset_str = 'offsetNeg';
    offset_str_short = 'Neg';
end

test_num = 0;
for hp_i = 1:length(hardpoint_list)
    for off_axis = 1:3
        test_num = test_num+1;
        hp_offset = [0 0 0];
        hp_offset(off_axis) = dist_offset;
        evalin('base',[hardpoint_list{hp_i} '=' hardpoint_list{hp_i} '+[' num2str(hp_offset) '];']);
        disp(['Testing ' offset_str_short ' ' hardpoint_list{hp_i} ', Axis ' hp_axes{off_axis} ]);
        sim(mdl)
        hptest(test_num).hp = hardpoint_list{hp_i};
        hptest(test_num).axis = hp_axes{off_axis};
        hptest(test_num).offsetRight = HP_Offset_RIGHT.Data(1);
        hptest(test_num).offsetLeft = HP_Offset_LEFT.Data(1);
        evalin('base',[hardpoint_list{hp_i} '=' hardpoint_list{hp_i} '-[' num2str(hp_offset) '];']);
    end
end

if ~exist('h1_sm_car_testrig_susp', 'var') || ...
        ~isgraphics(h1_sm_car_testrig_susp, 'figure')
    h1_sm_car_testrig_susp = figure('Name', 'h1_sm_car_testrig_susp');
end
figure(h1_sm_car_testrig_susp)
clf(h1_sm_car_testrig_susp)

simlog_handles(1) = subplot(1,2,1);
barh([hptest.offsetLeft],'FaceColor',[0.9 0.9 1])
title(sprintf('%s\n%s\n%s',...
    'Total Offset Relative to HPs as',...
    'Each HP Adjusted Along Axis',...
    ['Offset: ' offset_str_short]));
hold on
set(gca,'XScale','log')
plot([1e-8 1e-8],[0 length(hptest)],'r--','LineWidth',1);
hold off

simlog_handles(2) = subplot(1,2,2);
barh([hptest.offsetRight],'FaceColor',[0.9 0.9 1])
title(sprintf('%s\n%s\n%s',...
    strrep(mdl,'_','\_'),...
    strrep(['Version: ' steering],'_','\_'),datestr(now)));
hold on
set(gca,'XScale','log')
xlimits = get(gca,'XLim');
set(gca,'XLim',[1e-15 xlimits(2)]);
plot([1e-8 1e-8],[0 length(hptest)],'r-.','LineWidth',1);
hold off
linkaxes(simlog_handles,'x');

hold on
text(0.9,0.95,'Right','HorizontalAlignment','Right','Units','Normalized','FontWeight','Bold');
hold off
set(gcf,'Position',[280.2000  109.0000  688.8000  721.6000]);

subplot(1,2,1)
hold on
for i=1:length(hptest)
    text(1e-14,i,[...
        strrep(strrep(strrep(hptest(i).hp,'Vehicle.Chassis.SuspF.Linkage.',''),'.Value',''),'_','\_'),...
        ', ' hptest(i).axis]);
end
text(0.9,0.95,'Left','HorizontalAlignment','Right','Units','Normalized','FontWeight','Bold');
hold off

now_string = datestr(now,'yymmdd_HHMM');

[mdl_location,~] = which(mdl);
[mdl_folder,~,~] = fileparts(mdl_location);
saveas(gcf,[mdl_folder filesep mdl '_' now_string '_results_hptest_' strrep(steering,' ','_') '_' offset_str '.png']);
saveas(gcf,[mdl_folder filesep mdl                '_results_hptest_' strrep(steering,' ','_') '_' offset_str '.png']);

